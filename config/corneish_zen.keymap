/*
*
* forked_from:
*  https://github.com/ScottCJeffrey/Zen
*
* docs:
*  zmk.dev/docs
*
*/

#include <behaviors.dtsi>
#include <dt-bindings/zmk/keys.h>
#include <dt-bindings/zmk/bt.h>

/* Layers */
#define DEV 0
#define SYM 1
#define NAV 2
#define NUM 3

&caps_word {
    continue-list = <UNDERSCORE MINUS SPACE>;
};

/ {
    behaviors {
        tldesc: tilde_escape {
            compatible = "zmk,behavior-mod-morph";
            label = "TILDE_ESCAPE";
            #binding-cells = <0>;
            bindings = <&kp ESC>, <&kp TILDE>;
            mods = <(MOD_LSFT|MOD_RSFT)>;
        };

        bspc_del: backspace_delete {
            compatible = "zmk,behavior-mod-morph";
            label = "BACKSPACE_DELETE";
            #binding-cells = <0>;
            bindings = <&kp BACKSPACE>, <&kp DELETE>;
            mods = <(MOD_LSFT|MOD_RSFT)>;
            keep-mods = <(MOD_RSFT)>;
        };
    };
};

/ {
  keymap {
    compatible = "zmk,keymap";
    base_layer {
      label = "dev";
      bindings = <
        // ╭──────────────────┬──────────┬──────────┬─────────────┬────────────┬─────────────╮   ╭─────────────┬─────────────┬──────────────┬───────────┬────────────┬──────────────────╮
              &kp TAB            &kp Q      &kp W      &kp E         &kp R        &lt SYM T         &lt SYM Y     &kp U         &kp I          &kp O       &kp P        &kp MINUS 
        // ├──────────────────┼──────────┼──────────┼─────────────┼────────────┼─────────────┤   ├─────────────┼─────────────┼──────────────┼───────────┼────────────┼──────────────────┤
              &tldesc            &kp A      &kp S      &kp D         &kp F        &lt NAV G         &kp H         &kp J         &kp K          &kp L       &kp SEMI     &kp SQT         
        // ├──────────────────┼──────────┼──────────┼─────────────┼────────────┼─────────────┤   ├─────────────┼─────────────┼──────────────┼───────────┼────────────┼──────────────────┤
              &mt LSHFT LPAR     &kp Z      &kp X      &kp C         &kp V        &lt NUM B         &kp N         &kp M         &kp COMMA      &kp DOT     &kp FSLH     &mt RSHFT RPAR  
        // ╰──────────────────┴──────────┴──────────┴─────────────┼────────────┼─────────────┤   ├─────────────┼─────────────┼──────────────┴───────────┴────────────┴──────────────────╯
                                                       &kp LCTRL     &kp LGUI     &kp RET           &bspc_del     &kp SPACE     &caps_word   
        //                                          ╰─────────────┴────────────┴─────────────╯   ╰─────────────┴─────────────┴──────────────╯
      >;
    };

    sym_layer {
      label = "SYM";
      bindings = <
        // ╭──────────┬────────────┬──────────┬─────────────┬─────────────┬─────────────╮   ╭─────────────┬─────────────┬──────────────┬─────────────┬────────────┬─────────────╮
              &trans     &kp EXCL     &kp AT     &kp HASH      &kp DLLR      &kp PRCNT         &kp CARET     &kp AMPS      &kp STAR       &kp EQUAL     &kp PLUS     &none      
        // ├──────────┼────────────┼──────────┼─────────────┼─────────────┼─────────────┤   ├─────────────┼─────────────┼──────────────┼─────────────┼────────────┼─────────────┤
              &trans     &none        &none      &kp STAR      &kp CARET     &kp DLLR          &kp LBRC      &kp RBRC      &kp PRCNT      &kp AMPS      &kp HASH     &kp GRAVE   
        // ├──────────┼────────────┼──────────┼─────────────┼─────────────┼─────────────┤   ├─────────────┼─────────────┼──────────────┼─────────────┼────────────┼─────────────┤
              &trans     &none        &none      &none         &kp RBKT      &kp LBKT          &kp LT        &kp GT        &kp PIPE       &none         &kp BSLH     &none        
        // ╰──────────┴────────────┴──────────┴─────────────┼─────────────┼─────────────┤   ├─────────────┼─────────────┼──────────────┴─────────────┴────────────┴─────────────╯
                                                     &kp LCTRL     &kp LGUI      &kp RET           &bspc_del     &kp SPACE     &caps_word    
        //                                        ╰─────────────┴─────────────┴─────────────╯   ╰─────────────┴─────────────┴──────────────╯
      >;
    };

    nav_layer {
      label = "NAV";
      bindings = <
        // ╭──────────────┬────────────────┬────────────────┬────────────────┬────────────────┬────────────────╮   ╭─────────────┬────────────┬──────────────┬─────────────┬──────────┬────────────╮
              &trans         &kp N1           &kp N2           &kp N3           &kp N4           &kp N5               &kp N6        &kp N7       &kp N8         &kp N9        &kp N0     &kp BSPC
        // ├──────────────┼────────────────┼────────────────┼────────────────┼────────────────┼────────────────┤   ├─────────────┼────────────┼──────────────┼─────────────┼──────────┼────────────┤
              &bt BT_CLR     &bt BT_SEL 0     &bt BT_SEL 1     &bt BT_SEL 2     &bt BT_SEL 3     &bt BT_SEL 4         &kp LEFT      &kp DOWN     &kp UP         &kp RIGHT     &none      &none
        // ├──────────────┼────────────────┼────────────────┼────────────────┼────────────────┼────────────────┤   ├─────────────┼────────────┼──────────────┼─────────────┼──────────┼────────────┤
              &trans         &none            &none            &none            &none            &none                &none         &none        &none          &none         &none      &none
        // ╰──────────────┴────────────────┴────────────────┴────────────────┼────────────────┼────────────────┤   ├─────────────┼────────────┼──────────────┴─────────────┴──────────┴────────────╯
                                                               &kp LCTRL        &kp LGUI         &kp RET              &bspc_del     &kp SPACE    &caps_word           
        //                                                  ╰────────────────┴────────────────┴────────────────╯   ╰─────────────┴────────────┴──────────────╯
      >;
    };

    num_layer {
      label = "NUM";
      bindings = <
        // ╭────────┬───────────────────────┬───────────────────────┬───────────────────────┬───────────────────────┬───────────╮   ╭─────────────────┬───────────┬────────────┬───────────┬──────────────┬──────────╮
             &trans   &kp KP_N1               &kp KP_N2               &kp KP_N3               &kp KP_N4               &kp KP_N5       &kp KP_N6         &kp KP_N7   &kp KP_N8    &kp KP_N9   &kp KP_N0      &kp BSPC
        // ├────────┼───────────────────────┼───────────────────────┼───────────────────────┼───────────────────────┼───────────┤   ├─────────────────┼───────────┼────────────┼───────────┼──────────────┼──────────┤
             &trans   &kp LS(LC(LA(LG(A))))   &kp LS(LC(LA(LG(B))))   &kp LS(LC(LA(LG(C))))   &kp LS(LC(LA(LG(D))))   &none           &kp KP_ASTERISK   &kp KP_N4   &kp KP_N5    &kp KP_N6   &kp KP_PLUS    &none
        // ├────────┼───────────────────────┼───────────────────────┼───────────────────────┼───────────────────────┼───────────┤   ├─────────────────┼───────────┼────────────┼───────────┼──────────────┼──────────┤
             &trans   &kp LS(LC(LA(LG(F))))   &kp LS(LC(LA(LG(G))))   &kp LS(LC(LA(LG(H))))   &kp LS(LC(LA(LG(I))))   &none           &kp KP_N0         &kp KP_N1   &kp KP_N2    &kp KP_N3   &kp KP_ENTER   &none
        // ╰────────┴───────────────────────┴───────────────────────┴───────────────────────┼───────────────────────┼───────────┤   ├─────────────────┼───────────┼────────────┴───────────┴──────────────┴──────────╯
                                                                      &kp LCTRL               &kp LGUI                &kp RET         &bspc_del         &kp SPACE   &caps_word        
        //                                                          ╰───────────────────────┴───────────────────────┴───────────╯   ╰─────────────────┴───────────┴────────────╯
      >;
    };
  };
};
